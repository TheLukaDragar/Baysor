name: platforms_build

on:
  push:
    tags:
      - v*
jobs:
  build_and_release:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.8.5'
        os: [macos-latest, ubuntu-20.04]
        arch:
          - x64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Julia setup
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Prepare environment and install dependecies
        run: |
          julia -e 'using Pkg; Pkg.activate("."); Pkg.instantiate();'

      # - name: Cache dependencies
      #   uses: actions/cache@v1
      #   env:
      #     cache-name: cache-artifacts
      #   with:
      #     path: ~/.julia/artifacts
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Build binary
        run: |
          julia --project ./deps/build.jl app

      - name: Prepare distribution archives
        run: |
          zip -r baysor_${{ matrix.os }}_${{ matrix.arch }}_build.zip LICENSE README.MD ./bin/baysor/*

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            LICENSE
            README.MD
            baysor_${{ matrix.os }}_${{ matrix.arch }}_build.zip
